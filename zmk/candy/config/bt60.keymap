#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define FUNCTION 1
#define NUMPAD   2

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL &kp BSPC
                &lt NUMPAD TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp LBKT &kp RBKT
                &lt FUNCTION CAPS &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp SQT &kp BSLH &kp RET
                &kp LSHFT &kp GRAVE &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                &kp LGUI &kp LALT &kp LCTRL &kp SPACE &kp RCTRL &kp RALT &kp RGUI &kp C_PP
            >;
        };
        function {
            bindings = <
                &trans &trans &trans &kp LG(TAB) &kp LGUI &trans &trans &trans &trans &trans &trans &trans &trans &kp DEL
                &trans &kp C_PREV &kp C_PP &kp C_NEXT &trans &trans &trans &kp PG_UP &kp UP &kp PG_DN &trans &trans &trans
                &trans &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &trans &trans &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp INS &trans &bt BT_CLR &trans
                &trans &trans &trans &trans &trans &trans &trans &kp END &trans &trans &trans &kp UP &trans
                &trans &trans &trans &trans &kp LEFT &kp DOWN &kp RIGHT &trans
            >;
        };
        numpad {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp LS(N9) &kp LS(N0) &kp KP_MINUS &kp KP_PLUS &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MULTIPLY
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_DIVIDE &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp KP_N1 &kp KP_N2 &kp KP_N3 &trans
                &trans &trans &trans &trans &kp KP_N0 &trans &trans &trans
            >;
        };
    };
};