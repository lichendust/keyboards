#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define RESET __COUNTER__

#define KRI   __COUNTER__
#define ASE   __COUNTER__
#define REA   __COUNTER__
#define BL1   __COUNTER__

#define FUNC  __COUNTER__
#define NUM   __COUNTER__

/ {
	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
				&kp ESC      &kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9     &kp N0    &kp MINUS  &kp EQUAL             &kp BSPC
				&lt NUM TAB  &kp Q      &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I   &kp O      &kp P     &kp LBKT   &kp RBKT
				&mo FUNC     &kp A      &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L      &kp SEMI  &kp SQT    &kp BSLH              &kp RET
				&kp LSHFT    &kp GRAVE  &kp Z   &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH   &kp KP_DOT  &kp UP    &kp RSHFT
				&kp LGUI     &kp LGUI   &kp LALT                        &kp SPACE                          &none     &none      &kp LEFT    &kp DOWN  &kp RIGHT
			>;
		};
		function {
			bindings = <
				&bootloader  &trans        &trans      &trans        &trans  &trans  &trans    &trans     &trans    &trans     &trans   &trans  &trans          &kp DEL
				&trans       &kp C_PREV    &kp C_PP    &kp C_NEXT    &trans  &trans  &trans    &kp PG_UP  &kp UP    &kp PG_DN  &trans   &trans  &trans
				&trans       &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &trans  &trans  &kp HOME  &kp RIGHT  &kp DOWN  &kp LEFT   &kp INS  &trans  &trans          &trans
				&trans       &trans        &trans      &trans        &trans  &trans  &kp END   &trans     &trans    &trans     &trans   &trans  &trans  &trans  &trans
				&trans       &trans        &trans                                    &trans                                    &trans   &trans  &trans  &trans  &trans
			>;
		};
		numpad {
			bindings = <
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &kp LS(KP_N9)  &kp LS(KP_N0)  &kp KP_MINUS  &kp KP_PLUS      &trans
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &kp KP_N7      &kp KP_N8      &kp KP_N9     &kp KP_MULTIPLY
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &kp KP_N4      &kp KP_N5      &kp KP_N6     &kp KP_DIVIDE    &trans
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_N1      &kp KP_N2      &kp KP_N3     &trans           &trans
				&trans  &trans  &trans                          &trans                          &trans         &kp KP_N0      &trans        &trans           &trans
			>;
		};
	};
};