#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0

#define KRI 1
#define ASE 2
#define REA 3

#define FUNC 4
#define NUM  5

&key_repeat {
    usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
};

/ {
	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
				&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL &kp BSPC
				&lt NUM TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp LBKT &kp RBKT
				&mo FUNC &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp SQT &kp BSLH &kp RET
				&kp LSHFT &kp GRAVE &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp KP_DOT &kp UP &kp RSHFT
				&kp LGUI &kp LALT &kp LCTRL &kp SPACE &mo FUNC &key_repeat &kp LEFT &kp DOWN &kp RIGHT
			>;
		};
		krita {
			bindings = <
				&trans &kp N3 &kp N5 &kp N1 &none &none &none &none &none &none &none &kp LS(LC(F)) &none &trans
				&trans &kp KP_SLASH &kp B &kp E &none &kp LC(T) &kp LS(LC(A)) &kp LS(LC(D)) &none &none &none &trans &trans
				&trans &none &none &kp LC(R) &kp J &kp LC(G) &kp LS(LC(G)) &kp LA(LC(G)) &none &none &none &kp LA(LC(S)) &kp LC(S) &trans
				&trans &kp LS(LC(Z)) &kp LC(Z) &kp X &kp LC(C) &kp LC(V) &none &kp INS &trans &kp DEL &kp LS(DEL) &none &none &trans &none
				&kp LS(LA(SPACE)) &kp LS(SPACE) &trans &trans &to BASE &trans &trans &trans &trans
			>;
		};
		aseprite {
			bindings = <
				&trans &none &none &none &none &none &none &none &none &none &none &none &none &trans
				&trans &kp D &kp B &kp E &none &kp V &kp LC(D) &kp LS(LC(D)) &none &kp LBKT &kp RBKT &kp MINUS &kp EQUAL
				&trans &none &none &kp M &kp Q &kp LS(LA(G)) &none &none &none &none &none &none &kp LC(S) &trans
				&trans &kp LS(LC(Z)) &kp LC(Z) &kp X &none &none &kp G &kp LA(N) &kp LA(B) &kp LA(D) &kp LA(M) &kp DEL &kp LA(C) &trans &none
				&kp LCTRL &kp Z &kp LALT &trans &to BASE &trans &trans &trans &trans
			>;
		};
		reaper {
			bindings = <
				&trans &none &none &none &none &none &none &none &none &none &none &none &none &trans
				&trans &none &none &none &rea_rec &rea_over &none &none &none &none &none &none &none
				&trans &kp A &kp S &kp M &none &kp LS(LC(G)) &kp LA(LC(UP)) &rea_del_l &kp K &rea_del_r &none &none &kp LC(S) &trans
				&trans &kp LS(LC(Z)) &kp LC(Z) &none &none &none &none &kp LA(LC(DOWN)) &kp LC(M) &kp LA(M) &none &kp FSLH &kp DEL &trans &none
				&trans &trans &trans &trans &to BASE &trans &trans &trans &trans
			>;
		};
		function {
			bindings = <
				&trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
				&trans &kp C_PREV &kp C_PP &kp C_NEXT &trans &trans &trans &kp PG_UP &kp UP &kp PG_DN &trans &trans &trans
				&trans &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &trans &trans &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp INS &trans &bootloader &trans
				&trans &trans &trans &trans &trans &trans &trans &kp END &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &to KRI &to ASE &to REA &trans
			>;
		};
		numpad {
			bindings = <
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &kp LS(N9) &kp LS(N0) &kp KP_MINUS &kp KP_PLUS &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MULTIPLY
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_DIVIDE &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp KP_N1 &kp KP_N2 &kp KP_N3 &trans &trans
				&trans &trans &trans &trans &trans &kp KP_N0 &trans &trans &trans
			>;
		};
	};

	macros {
		// cut region, select left and delete
		rea_del_l: rea_del_l {
			label = "ZM_rea_del_l";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <30>;
			bindings = <&macro_tap &kp K>, <&macro_tap &kp BSPC>;
		};
		// cut region, select right and delete
		rea_del_r: rea_del_r {
			label = "ZM_rea_del_r";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <30>;
			bindings = <&macro_tap &kp LS(K)>, <&macro_tap &kp BSPC>;
		};
		// reaper: set overdub record mode + start recording
		rea_over: rea_over {
			label = "ZM_rea_over";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <30>;
			bindings = <&macro_tap &kp F21>, <&macro_tap &kp LC(R)>;
		};
		// reaper: set regular record mode + start recording
		rea_rec: rea_rec {
			label = "ZM_rea_rec";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <30>;
			bindings = <&macro_tap &kp F20>, <&macro_tap &kp LC(R)>;
		};
	};
};